---
description: Pipeline for parsing Box Events
processors:
  - set:
      field: ecs.version
      value: "8.3.0"
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
  - json:
      field: event.original
      target_field: box
#  - date:
#      field: box.recorded_at
#      target_field: "@timestamp"
#      ignore_failure: true
#      formats:
#        - yyyy-MM-dd'T'hh:mm:ssXXX
#      if: "ctx?.box?.source != null"
  - rename:
      field: box.session_id
      target_field: box.session.id
      ignore_missing: true
# `box.type` is always `event` - remove to avoid ambiguity with `event.kind`
  - remove:
      field: box.type
      ignore_missing: true
  - set:
      field: event.kind
      value: "alert"
      ignore_failure: true
  - rename:
      field: box.created_by.type
      target_field: event.type
      ignore_missing: true
  - rename:
      field: box.event_type
      target_field: event.action
      ignore_missing: true
  - rename:
      field: box.event_id
      target_field: event.id
      ignore_missing: true
# Box Shield can add these fields 
  - date:
      field: box.created_at
      target_field: "@timestamp"
      ignore_failure: true
      formats:
        - yyyy-MM-dd'T'hh:mm:ssXXX
      if: "ctx?.box?.additional_details != null"
  - rename:
      field: box.additional_details.shield_alert.rule_category
      target_field: rule.category
      ignore_missing: true
  - convert:
      field: box.additional_details.shield_alert.rule_id
      type: string
      target_field: rule.id
      ignore_missing: true
  - remove:
      field: box.additional_details.shield_alert.rule_id
      ignore_failure: true
      ignore_missing: true
  - rename:
      field: box.additional_details.shield_alert.rule_name
      target_field: rule.name
      ignore_missing: true
  - rename:
      field: box.additional_details.shield_alert.risk_score
      target_field: event.risk_score
      ignore_missing: true
# sessions
  - set:
      value: "user-account"
      field: threat.indicator.type
  - script:
      description: Confect description from multiple fields
      lang: painless
      source: |
        ctx.threat.indicator.description = "IP " + 
          ctx.box.additional_details.shield_alert.alert_summary.sessions.activities.ip_info.ip + " was observed to " + 
          ctx.box.additional_details.shield_alert.alert_summary.sessions.activities.event_type + " " +
          ctx.box.additional_details.shield_alert.alert_summary.sessions.activities.item_type + " " + 
          ctx.box.additional_details.shield_alert.alert_summary.sessions.activities.item_path + "/" +
          ctx.box.additional_details.shield_alert.alert_summary.sessions.activities.item_name + " by " +
          ctx.box.additional_details.shield_alert.alert_summary.sessions.activities.service_name
  - rename:
      field: box.additional_details.shield_alert.alert_summary.sessions.activities.ip_info.longitude
      target_field: threat.indicator.geo.location.lon
      ignore_missing: true
  - rename:
      field: box.additional_details.shield_alert.alert_summary.sessions.activities.ip_info.latitude
      target_field: threat.indicator.geo.location.lat
      ignore_missing: true
  - rename:
      field: box.additional_details.shield_alert.alert_summary.sessions.activities.service_name
      target_field: threat.indicator.provider
      ignore_missing: true
  - rename:
      field: box.additional_details.shield_alert.link
      target_field: threat.indicator.reference
      ignore_missing: true
  - convert:
      field: box.additional_details.shield_alert.alert_id
      type: string
      ignore_missing: true
  - rename:
      field: box.additional_details.shield_alert.user.email
      target_field: user.effective.email
      ignore_missing: true
  - rename:
      field: box.additional_details.shield_alert.user.name
      target_field: user.effective.name
      ignore_missing: true
  - convert:
      field: box.additional_details.shield_alert.user.id
      type: string
      target_field: user.effective.id
      ignore_missing: true
  - remove:
      field: box.additional_details.shield_alert.user.id
      ignore_failure: true
      ignore_missing: true
  - script:
      description: Capitalize Priority to match Appendix A of the STIX 2.1 framework
      lang: painless
      source: |
        if (ctx.box?.additional_details?.shield_alert?.priority != null) {
            ctx.threat.indicator.confidence = 
                ctx.box.additional_details.shield_alert.priority.substring(0, 1).toUpperCase() + 
                ctx.box.additional_details.shield_alert.priority.substring(1);
        }
# already have ip in `client.ip`
  - remove:
      field: 
        - box.additional_details.shield_alert.alert_summary.sessions
        - box.additional_details.shield_alert.priority
        - box.additional_details.shield_alert.created_at
      ignore_failure: true
      ignore_missing: true
# Conditionally, remove event.original
  - remove:
      field: event.original
      if: "ctx?.tags == null || !(ctx.tags.contains('preserve_original_event'))"
      ignore_failure: true
      ignore_missing: true
# Drop empty/null fields
  - script:
      description: Drops null/empty values recursively
      lang: painless
      source: |
        boolean dropEmptyFields(Object object) {
          if (object == null || object == "") {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(value -> dropEmptyFields(value));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(value -> dropEmptyFields(value));
            return (((List) object).length == 0);
          }
          return false;
        }
        dropEmptyFields(ctx);
on_failure:
  - set:
      field: error.message
      value: '{{ _ingest.on_failure_message }}'
