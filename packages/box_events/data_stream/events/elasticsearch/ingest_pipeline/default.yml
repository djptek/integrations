---
description: Pipeline for parsing Box Events
processors:
  - set:
      field: ecs.version
      value: "8.3.0"
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
  - json:
      field: event.original
      target_field: box
  - date:
      field: box.recorded_at
      target_field: "@timestamp"
      ignore_failure: true
      formats:
        - yyyy-MM-dd'T'hh:mm:ssXXX
      if: "ctx.box?.source != null"
  - rename:
      field: box.session_id
      target_field: box.session.id
      ignore_missing: true
# `box.type` is always `event` - remove to avoid ambiguity with `event.kind`
  - remove:
      field: box.type
      ignore_missing: true
  - set:
      field: event.kind
      value: "event"
      if: "ctx.box?.source != null"
      ignore_failure: true
  - set:
      field: event.kind
      value: "alert"
      if: "ctx.box?.additional_details?.shield_alert != null"
      ignore_failure: true
  - script:
      description: Set event.category + event.type
      lang: painless
      params:
        access_granted:
          map:
            category: ['configuration']
            type: ['access','allowed']
        access_revoked:
          map:
            category: ['configuration']
            type: ['access','allowed']
        add_device_association:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        add_login_activity_device:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        admin_login:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        application_created:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        application_public_key_added:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        application_public_key_deleted:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        change_admin_role:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        change_folder_permission:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        collaboration_accept:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        collaboration_expiration:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        collaboration_invite:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        collaboration_remove:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        collaboration_role_change:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        collab_add_collaborator:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        collab_invite_collaborator:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        collab_remove_collaborator:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        collab_role_change:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        comment_create:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        comment_delete:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        content_access:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        content_workflow_abnormal_download_activity:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        content_workflow_automation_add:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        content_workflow_automation_delete:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        content_workflow_policy_add:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        content_workflow_sharing_policy_violation:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        content_workflow_upload_policy_violation:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        copy:
          map:
            category: ['file']
            type: ['file','creation']
        data_retention_create_retention:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        data_retention_remove_retention:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        delete:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        delete_user:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        device_trust_check_failed:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        download:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        edit:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        edit_user:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        email_alias_confirm:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        email_alias_remove:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        enable_two_factor_auth:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        enterprise_app_authorization_update:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        failed_login:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        file_marked_malicious:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        file_watermarked_download:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        group_add_item:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        group_add_user:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        group_creation:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        group_deletion:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        group_edited:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        group_remove_item:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        group_remove_user:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        item_copy:
          map:
            category: ['file']
            type: ['creation']
        item_create:
          map:
            category: ['file']
            type: ['creation']
        item_download:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        item_make_current_version:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        item_modify:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        item_move:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        item_open:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        item_preview:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        item_rename:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        item_shared:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        item_shared_create:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        item_shared_unshare:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        item_shared_update:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        item_sync:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        item_trash:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        item_undelete_via_trash:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        item_unsync:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        item_upload:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        legal_hold_assignment_create:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        legal_hold_assignment_delete:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        legal_hold_policy_create:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        legal_hold_policy_delete:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        legal_hold_policy_update:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        lock:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        lock_create:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        lock_destroy:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        login:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        master_invite_accept:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        master_invite_reject:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        metadata_instance_create:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        metadata_instance_delete:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        metadata_instance_update:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        metadata_template_create:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        metadata_template_delete:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        metadata_template_update:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        move:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        new_user:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        preview:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        remove_device_association:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        remove_login_activity_device:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        rename:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        retention_policy_assignment_add:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        share:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        share_expiration:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        shield_alert:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        shield_external_collab_access_blocked:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        shield_external_collab_access_blocked_missing_justification:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        shield_external_collab_invite_blocked:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        shield_external_collab_invite_blocked_missing_justification:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        shield_justification_approval:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        sign_document_assigned:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        sign_document_cancelled:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        sign_document_completed:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        sign_document_converted:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        sign_document_created:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        sign_document_declined:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        sign_document_expired:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        sign_document_signed:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        sign_document_viewed_by_signed:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        signer_downloaded:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        signer_forwarded:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        storage_expiration:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        tag_item_create:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        task_assignment_create:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        task_assignment_delete:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        task_assignment_update:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        task_create:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        task_update:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        terms_of_service_accept:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        terms_of_service_reject:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        undelete:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        unlock:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        unshare:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        update_collaboration_expiration:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        update_share_expiration:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        upload:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        user_authenticate_oauth2_access_token_create:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        watermark_label_create:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
        watermark_label_delete:
          map:
            category: ['tmp_value']
            type: ['tmp_value','tmp_value']
      source: |
        def setField(Map dest, String[] path, def value) {
          for (int i=0; i<path.length-1; i++) {
            dest = dest.computeIfAbsent(path[i], _ -> new HashMap());
          }
          dest[path[path.length-1]] = value;
        }
        def boxEventType = 'ctx.box.event_type';
        def ecsEventRoot = 'event';
        def eventType = params.getOrDefault(ctx.box.event_type.toLowerCase(), null);
        if (eventType != null) {
          def keys = ["category", "type"];
          for (key in keys) {
            if (eventType.map.containsKey(key)) {
              setField(ctx, 
                (ecsEventRoot + "." + key).splitOnToken('.'), 
                 eventType.map.get(key));
            }
          }
        }   
  - rename:
      field: box.event_type
      target_field: event.action
      ignore_missing: true
  - rename:
      field: box.event_id
      target_field: event.id
      ignore_missing: true
# If a user or item triggers an event, The response of the GET /events endpoint contains an event source object.
  - convert:
      field: box.source.sequence_id
      target_field: event.sequence
      type: integer
      ignore_missing: true
  - rename:
      field: box.source.type
      target_field: file.type
      ignore_missing: true
  - rename:
      if: ctx.file?.type != "folder"
      field: box.source.name
      target_field: file.name
      ignore_missing: true
  - rename:
      if: ctx.file?.type == "folder"
      field: box.source.name
      target_field: file.directory
      ignore_missing: true
  - date:
      field: box.source.created_at
      target_field: file.created
      ignore_failure: true
      formats:
        - yyyy-MM-dd'T'hh:mm:ssXXX
  - remove:
      field: box.source.created_at
      ignore_missing: true
  - date:
      field: box.source.content_created_at
      target_field: file.created
      ignore_failure: true
      formats:
        - yyyy-MM-dd'T'hh:mm:ssXXX
  - remove:
      field: box.source.content_created_at
      ignore_missing: true
  - date:
      field: box.source.content_modified_at
      target_field: file.mtime
      ignore_failure: true
      formats:
        - yyyy-MM-dd'T'hh:mm:ssXXX
  - remove:
      field: box.source.content_modified_at
      ignore_missing: true
  - date:
      field: box.source.modified_at
      target_field: file.ctime
      ignore_failure: true
      formats:
        - yyyy-MM-dd'T'hh:mm:ssXXX
  - rename:
      field: box.source.size
      target_field: file.size
      ignore_missing: true
  - rename:
      field: box.source.file_version.sha1
      target_field: file.hash.sha1
      ignore_missing: true
  - append:
      field: related.user
      value: "{{{box.source.created_by.id}}}"
      ignore_failure: true
      allow_duplicates: false
  - append:
      field: related.user
      value: "{{{box.source.created_by.login}}}"
      ignore_failure: true
      allow_duplicates: false
  - append:
      field: related.user
      value: "{{{box.source.created_by.name}}}"
      ignore_failure: true
      allow_duplicates: false
  - append:
      field: related.user
      value: "{{{box.source.modified_by.id}}}"
      ignore_failure: true
      allow_duplicates: false
  - append:
      field: related.user
      value: "{{{box.source.modified_by.login}}}"
      ignore_failure: true
      allow_duplicates: false
  - append:
      field: related.user
      value: "{{{box.source.modified_by.name}}}"
      ignore_failure: true
      allow_duplicates: false
  - append:
      field: related.user
      value: "{{{box.source.owned_by.id}}}"
      ignore_failure: true
      allow_duplicates: false
  - append:
      field: related.user
      value: "{{{box.source.owned_by.login}}}"
      ignore_failure: true
      allow_duplicates: false
  - append:
      field: related.user
      value: "{{{box.source.owned_by.name}}}"
      ignore_failure: true
      allow_duplicates: false
# Conditionally, remove event.original
  - remove:
      field: event.original
      if: "ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))"
      ignore_failure: true
      ignore_missing: true
# Drop empty/null fields
  - script:
      description: Drops null/empty values recursively
      lang: painless
      source: |
        boolean dropEmptyFields(Object object) {
          if (object == null || object == "") {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(value -> dropEmptyFields(value));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(value -> dropEmptyFields(value));
            return (((List) object).length == 0);
          }
          return false;
        }
        dropEmptyFields(ctx);
on_failure:
  - set:
      field: error.message
      value: '{{ _ingest.on_failure_message }}'
