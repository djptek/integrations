---
description: Pipeline for parsing Box Events
processors:
  - set:
      field: ecs.version
      value: "8.3.0"
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
  - json:
      field: event.original
      target_field: box
  - date:
      field: box.recorded_at
      target_field: "@timestamp"
      ignore_failure: true
      formats:
        - yyyy-MM-dd'T'hh:mm:ssXXX
      if: "ctx?.box?.source != null"
  - rename:
      field: box.session_id
      target_field: box.session.id
      ignore_missing: true
# `box.type` is always `event` - remove to avoid ambiguity with `event.kind`
  - remove:
      field: box.type
      ignore_missing: true
  - set:
      field: event.kind
      value: "event"
      if: "ctx?.box?.source != null"
      ignore_failure: true
  - set:
      field: event.kind
      value: "alert"
      if: "ctx?.box?.additional_details?.shield_alert != null"
      ignore_failure: true
  - rename:
      field: box.created_by.type
      target_field: event.type
      ignore_missing: true
  - rename:
      field: box.event_type
      target_field: event.action
      ignore_missing: true
  - rename:
      field: box.event_id
      target_field: event.id
      ignore_missing: true
# If a user or item triggers an event, The response of the GET /events endpoint contains an event source object.
  - convert:
      field: box.source.sequence_id
      target_field: event.sequence
      type: integer
      ignore_missing: true
  - rename:
      field: box.source.type
      target_field: file.type
      ignore_missing: true
  - rename:
      if: ctx?.file?.type != "folder"
      field: box.source.name
      target_field: file.name
      ignore_missing: true
  - rename:
      if: ctx?.file?.type == "folder"
      field: box.source.name
      target_field: file.directory
      ignore_missing: true
  - date:
      field: box.source.created_at
      target_field: file.created
      ignore_failure: true
      formats:
        - yyyy-MM-dd'T'hh:mm:ssXXX
  - remove:
      field: box.source.created_at
      ignore_missing: true
  - date:
      field: box.source.content_created_at
      target_field: file.created
      ignore_failure: true
      formats:
        - yyyy-MM-dd'T'hh:mm:ssXXX
  - remove:
      field: box.source.content_created_at
      ignore_missing: true
  - date:
      field: box.source.content_modified_at
      target_field: file.mtime
      ignore_failure: true
      formats:
        - yyyy-MM-dd'T'hh:mm:ssXXX
  - remove:
      field: box.source.content_modified_at
      ignore_missing: true
  - date:
      field: box.source.modified_at
      target_field: file.ctime
      ignore_failure: true
      formats:
        - yyyy-MM-dd'T'hh:mm:ssXXX
  - rename:
      field: box.source.size
      target_field: file.size
      ignore_missing: true
  - rename:
      field: box.source.file_version.sha1
      target_field: file.hash.sha1
      ignore_missing: true
  - append:
      field: related.user
      value: "{{{box.source.created_by.id}}}"
      ignore_failure: true
      allow_duplicates: false
  - append:
      field: related.user
      value: "{{{box.source.created_by.login}}}"
      ignore_failure: true
      allow_duplicates: false
  - append:
      field: related.user
      value: "{{{box.source.created_by.name}}}"
      ignore_failure: true
      allow_duplicates: false
  - append:
      field: related.user
      value: "{{{box.source.modified_by.id}}}"
      ignore_failure: true
      allow_duplicates: false
  - append:
      field: related.user
      value: "{{{box.source.modified_by.login}}}"
      ignore_failure: true
      allow_duplicates: false
  - append:
      field: related.user
      value: "{{{box.source.modified_by.name}}}"
      ignore_failure: true
      allow_duplicates: false
  - append:
      field: related.user
      value: "{{{box.source.owned_by.id}}}"
      ignore_failure: true
      allow_duplicates: false
  - append:
      field: related.user
      value: "{{{box.source.owned_by.login}}}"
      ignore_failure: true
      allow_duplicates: false
  - append:
      field: related.user
      value: "{{{box.source.owned_by.name}}}"
      ignore_failure: true
      allow_duplicates: false
# Conditionally, remove event.original
  - remove:
      field: event.original
      if: "ctx?.tags == null || !(ctx.tags.contains('preserve_original_event'))"
      ignore_failure: true
      ignore_missing: true
# Drop empty/null fields
  - script:
      description: Drops null/empty values recursively
      lang: painless
      source: |
        boolean dropEmptyFields(Object object) {
          if (object == null || object == "") {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(value -> dropEmptyFields(value));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(value -> dropEmptyFields(value));
            return (((List) object).length == 0);
          }
          return false;
        }
        dropEmptyFields(ctx);
on_failure:
  - set:
      field: error.message
      value: '{{ _ingest.on_failure_message }}'
